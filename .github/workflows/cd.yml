name: Continuous Distribution (CD)

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    concurrency: release

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Build package
        run: uvx --from build pyproject-build --installer uv

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.8.8
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit: true
          tag: true
          changelog: true

      - name: Upload build artifacts for GitHub Release
        uses: actions/upload-artifact@v4
        if: steps.release.outputs.released == 'true'
        with:
          name: build-artifacts
          path: |
            dist/*.whl
            dist/*.tar.gz

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@v9.8.8
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package to PyPI
        if: steps.release.outputs.released == 'true'
        run: uvx twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  deploy-docs:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Deploy documentation
        run: uv run mkdocs gh-deploy --force
